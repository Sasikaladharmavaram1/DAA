#include <stdio.h>
#include <unordered_map>
int sum_of_squared_distinct(int* nums, int n) {
  int sum = 0;
  std::unordered_map<int, int> freq; 
  for (int i = 0, j = 0; i < n; i++) {
    freq[nums[i]]++;
    while (j < n && (freq[nums[j]] > 1 || freq.size() == 1)) {
      freq[nums[j]]--; 
      j++;
    }
    int distinct_count = freq.size();  
    sum += distinct_count * distinct_count;
  }
  return sum;
}
int main() {
  int nums[] = {1, 2, 3, 2, 1, 1};
  int n = sizeof(nums) / sizeof(nums[0]);
  int result = sum_of_squared_distinct(nums, n);
  printf("Sum of squares of distinct counts: %d\n", result);
  return 0;
}
